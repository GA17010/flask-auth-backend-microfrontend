name: API Tests with Postman

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      db:
        image: postgres
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Build backend image
        run: docker build -t flask-backend .
        
      - name: Start backend
        run: |
          docker run -d \
            --name backend \
            --network host \
            -e FLASK_ENV=testing \
            -e SECRET_KEY=secretkey \
            -e DATABASE_URL=postgresql+psycopg2://user:password@localhost:5432/testdb \
            -e CORS_ORIGINS=http://localhost:8080,http://localhost:8082 \
            -p 5000:5000 \
            flask-backend
          
          # Esperar a que el backend est√© listo
          while ! curl -s http://localhost:5000/health-check; do
            sleep 1
          done

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          
      - name: Install Newman
        run: npm install -g newman

      - name: Run Postman tests
        run: |
          newman run tests/postman/Flask_auth_test_backend.postman_collection.json \
            --env-var "baseUrl=http://localhost:5000" \
            --global-var "email=testuser@example.com" \
            --global-var "password=Password@123"

      - name: Generate HTML report
        if: always()
        run: |
          newman run tests/postman/Flask_auth_test_backend.postman_collection.json \
            -r html \
            --env-var "baseUrl=http://localhost:5000" \
            --reporters html \
            --reporter-html-export report.html
            
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: newman-report
          path: report.html