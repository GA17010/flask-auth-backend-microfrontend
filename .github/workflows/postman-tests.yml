name: API Tests with Postman

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Clonar el repositorio
        uses: actions/checkout@v4

      - name: 🏗️ Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 🔽 Instalar Newman
        run: npm install -g newman

      - name: 🔽 Instalar newman-reporter-html
        run: npm install -g newman-reporter-html

      - name: 🚀 Levantar el backend
        run: |
          docker compose up -d

      - name: 🕒 Esperar a que la base de datos esté disponible
        run: |
          until docker exec flask-auth-backend-microfrontend-db-1 pg_isready -U postgres; do
            echo "Esperando a que PostgreSQL esté listo..."
            sleep 2
          done
          echo "PostgreSQL está listo."

      - name: 🛠️ Ejecutar migraciones en la base de datos
        run: |
          docker exec flask-auth-backend-microfrontend-backend-1 flask db upgrade
          docker exec flask-auth-backend-microfrontend-backend-1 flask db migrate -m "Initial migration"
          docker exec flask-auth-backend-microfrontend-backend-1 flask db upgrade

      - name: 🛠️ Ejecutar pruebas con Newman
        run: newman run tests/postman/Flask_auth_test_backend.postman_collection.json

      - name: 📊 Generar reporte en HTML
        run: |
          newman run tests/postman/Flask_auth_test_backend.postman_collection.json -r html
          mv newman/* report.html

      - name: 📤 Subir reporte como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: newman-report
          path: report.html
